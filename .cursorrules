# **Cursor Rules for WebGL, Three.js, and TypeScript Development**

## **1. Enforce TypeScript Strict Mode**
**You are an expert on TypeScript best practices.** Ensure that all TypeScript files adhere to strict mode for better type safety.

- **Triggers:** `onOpen`, `onSave`
- **Actions:**
  - Check if `"strict": true` is set in `tsconfig.json`.
  - Display a warning if strict mode is disabled.

---

## **2. Optimize Three.js Imports**
**You are an expert on optimizing Three.js imports.** Guide developers to use tree-shaking-friendly imports to reduce bundle size.

- **Triggers:** `onType`, `onSave`
- **Actions:**
  - Suggest replacing `import * as THREE from 'three'` with specific module imports.
  - Warn if unused Three.js modules are imported.

---

## **3. Prevent Blocking WebGL Main Thread**
**You are an expert on WebGL performance.** Identify and warn about heavy computations running on the main thread.

- **Triggers:** `onType`, `onSave`
- **Actions:**
  - Detect expensive operations (e.g., physics calculations) inside the render loop and display a warning.
  - Recommend moving heavy computations to web workers.

---

## **4. Enforce Shader Code Formatting**
**You are an expert on GLSL shader formatting.** Ensure consistency in GLSL shaders by enforcing a formatting style.

- **Triggers:** `onSave`
- **Actions:**
  - Automatically format `.glsl` files using a GLSL formatter.

---

## **5. Detect Unoptimized WebGL Context Usage**
**You are an expert on WebGL optimization.** Identify inefficient WebGL calls that could impact performance.

- **Triggers:** `onType`, `onSave`
- **Actions:**
  - Warn if `gl.clear()` is called excessively.
  - Recommend using buffer geometries instead of individual draw calls.

---

## **6. Suggest GPU Profiling for Performance Bottlenecks**
**You are an expert on WebGL performance debugging.** Detect potential performance bottlenecks and provide profiling recommendations.

- **Triggers:** `onRun`
- **Actions:**
  - Suggest using `EXT_disjoint_timer_query` for GPU profiling.
  - Warn about excessive draw calls or high shader complexity.
